-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerGame
local SlipeServerIO
local SlipeSharedHelpers
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerGame = Slipe.Server.Game
  SlipeServerIO = Slipe.Server.IO
  SlipeSharedHelpers = Slipe.Shared.Helpers
end)
System.namespace("Slipe.Server.Game", function (namespace)
  -- <summary>
  -- Static class for functionality of the actual server process
  -- </summary>
  namespace.class("GameServer", function (namespace)
    local getPassword, setPassword, getMaxPlayers, setMaxPlayers, getFPSLimit, setFPSLimit, getPort, getHTTPPort, 
    getName, getIsVoiceEnabled, config, getConfig, getTickCount, version, getVersion, console, 
    getConsole, debug, getDebug, log, getLog, getFpsLimit, setFpsLimit, SetGlitchEnabled, 
    IsGlitchEnabled, Shutdown
    getPassword = function ()
      return SlipeMtaDefinitions.MtaServer.GetServerPassword()
    end
    setPassword = function (value)
      SlipeMtaDefinitions.MtaServer.SetServerPassword(value)
    end
    getMaxPlayers = function ()
      return SlipeMtaDefinitions.MtaServer.GetMaxPlayers()
    end
    setMaxPlayers = function (value)
      SlipeMtaDefinitions.MtaServer.SetMaxPlayers(value)
    end
    getFPSLimit = function ()
      return SlipeMtaDefinitions.MtaShared.GetFPSLimit()
    end
    setFPSLimit = function (value)
      SlipeMtaDefinitions.MtaShared.SetFPSLimit(value)
    end
    getPort = function ()
      return SlipeMtaDefinitions.MtaServer.GetServerPort()
    end
    getHTTPPort = function ()
      return SlipeMtaDefinitions.MtaServer.GetServerHttpPort()
    end
    getName = function ()
      return SlipeMtaDefinitions.MtaServer.GetServerName()
    end
    getIsVoiceEnabled = function ()
      return SlipeMtaDefinitions.MtaShared.IsVoiceEnabled()
    end
    getConfig = function ()
      if config == nil then
        config = SlipeServerGame.Config()
      end
      return config
    end
    getTickCount = function ()
      return SlipeMtaDefinitions.MtaShared.GetTickCount()
    end
    getVersion = function ()
      if version == nil then
        version = SlipeSharedHelpers.SystemVersion()
      end
      return version
    end
    getConsole = function ()
      if console == nil then
        console = SlipeServerIO.MtaConsole()
      end
      return console
    end
    getDebug = function ()
      if debug == nil then
        debug = SlipeServerIO.MtaDebug()
      end
      return debug
    end
    getLog = function ()
      if log == nil then
        log = SlipeServerIO.ServerLog()
      end
      return log
    end
    getFpsLimit = function ()
      return SlipeMtaDefinitions.MtaShared.GetFPSLimit()
    end
    setFpsLimit = function (value)
      SlipeMtaDefinitions.MtaShared.SetFPSLimit(value)
    end
    -- <summary>
    -- Enable or disable a certain known GTA glitch
    -- </summary>
    SetGlitchEnabled = function (glitch, enabled)
      return SlipeMtaDefinitions.MtaServer.SetGlitchEnabled(glitch:ToEnumString(SlipeServerGame.Glitch):ToLower(), enabled)
    end
    -- <summary>
    -- Check if a certain GTA glitch is enabled
    -- </summary>
    IsGlitchEnabled = function (glitch)
      return SlipeMtaDefinitions.MtaServer.IsGlitchEnabled(glitch:ToEnumString(SlipeServerGame.Glitch):ToLower())
    end
    -- <summary>
    -- Terminates the server process
    -- </summary>
    Shutdown = function (reason)
      SlipeMtaDefinitions.MtaServer.Shutdown(reason)
    end
    return {
      getPassword = getPassword,
      setPassword = setPassword,
      getMaxPlayers = getMaxPlayers,
      setMaxPlayers = setMaxPlayers,
      getFPSLimit = getFPSLimit,
      setFPSLimit = setFPSLimit,
      getPort = getPort,
      getHTTPPort = getHTTPPort,
      getName = getName,
      getIsVoiceEnabled = getIsVoiceEnabled,
      getConfig = getConfig,
      getTickCount = getTickCount,
      getVersion = getVersion,
      getConsole = getConsole,
      getDebug = getDebug,
      getLog = getLog,
      getFpsLimit = getFpsLimit,
      setFpsLimit = setFpsLimit,
      SetGlitchEnabled = SetGlitchEnabled,
      IsGlitchEnabled = IsGlitchEnabled,
      Shutdown = Shutdown
    }
  end)
end)
